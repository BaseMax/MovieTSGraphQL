# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String!
  role: Role!
}

enum Role {
  user
  admin
  superadmin
}

type AuthPayload {
  user: User!
  token: String!
}

type Genre {
  id: ID!
  name: String!
}

type Artist {
  id: ID!
  name: String!
  bio: String
  dateOfBirth: DateTime
  avatar: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginatedArtist {
  total: Int!
  artists: [Artist!]!
}

type Query {
  user: User!
  genres: [Genre!]!
  genre(id: String!): Genre
  artist(id: String!): Artist
  searchArtists(input: SearchArtistInput!): PaginatedArtist!
}

input SearchArtistInput {
  limit: Int! = 16
  skip: Int! = 0
  text: String
}

type Mutation {
  register(input: RegisterUserInput!): AuthPayload!
  login(input: LoginUserInput!): AuthPayload!
  changeRole(userId: String!, role: Role!): User!
  createGenre(input: CreateGenreInput!): Genre!
  updateGenre(input: UpdateGenreInput!): Genre!
  deleteArtist(id: String!): Boolean!
  createArtist(input: CreateArtistInput!): Artist!
  updateArtist(input: UpdateArtistInput!): Artist!
}

input RegisterUserInput {
  email: String!
  name: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateGenreInput {
  name: String!
}

input UpdateGenreInput {
  name: String!
  id: ID!
}

input CreateArtistInput {
  name: String!
  bio: String
  dateOfBirth: DateTime
  avatar: String
}

input UpdateArtistInput {
  name: String
  bio: String
  dateOfBirth: DateTime
  avatar: String
  id: String!
}